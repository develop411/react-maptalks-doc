"use strict";(self.webpackChunkreact_maptalks_docs=self.webpackChunkreact_maptalks_docs||[]).push([[7653],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function p(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),l=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):p(p({},e),t)),n},c=function(t){var e=l(t.components);return a.createElement(s.Provider,{value:e},t.children)},m="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),m=l(n),u=r,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return n?a.createElement(h,p(p({ref:e},c),{},{components:n})):a.createElement(h,p({ref:e},c))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,p=new Array(o);p[0]=u;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[m]="string"==typeof t?t:r,p[1]=i;for(var l=2;l<o;l++)p[l]=n[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5809:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3},p="Setup",i={unversionedId:"Getting started/Setup",id:"Getting started/Setup",title:"Setup",description:"To setup a new map in your component, you need to do:",source:"@site/docs/Getting started/Setup.md",sourceDirName:"Getting started",slug:"/Getting started/Setup",permalink:"/react-maptalks-doc/docs/Getting started/Setup",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Getting started/Setup.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/react-maptalks-doc/docs/Getting started/Installing"},next:{title:"Examples",permalink:"/react-maptalks-doc/docs/category/examples"}},s={},l=[],c={toc:l},m="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setup"},"Setup"),(0,r.kt)("p",null,"To setup a new map in your component, you need to do: "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"create a state variable that contains the initial map options.\nThis object is an ",(0,r.kt)("a",{parentName:"li",href:"https://maptalks.org/maptalks.js/api/1.x/Map.html#options"},"mapOptions")," object defined by Maptalks"),(0,r.kt)("li",{parentName:"ol"},"Wrap the mapComponent with a MaptalksProvider to provide its children to general context that contain the map instance."),(0,r.kt)("li",{parentName:"ol"},"Add a MapComponent inside to a div that will contain and dimentionatethe map. The MapComponent need an idMap, a mapOptions, and optionally a className.")),(0,r.kt)("p",null,"this example describe all steps:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'export default function Map() {\n\n    //1. create a state variable that contains the initial map options.\n    const [mapOptions, setMapOptions] = useState<maptalks.MapOptions>()\n    useEffect(() => {\n        setMapOptions({\n            center: [-76.4, 3.4],\n            zoom: 17\n        })\n    }, [])\n\n    return (\n      // 2. Wrap the MapComponent with a MaptalksProvider\n        <MaptalksProvider>\n        {/* 3. Add a MapComponent inside to a div that will contain and dimentionate the map. */}\n            <div className={styles.mapContainer} >\n                <MapComponent\n                    idMap="myMap"\n                    mapOptions={mapOptions}\n                    className="mapClass" //Previously defined in a css file. \n                >\n                </MapComponent>\n            </div>\n        </MaptalksProvider>\n    );\n}\n')),(0,r.kt)("p",null,"At this moment the map instance must be created, but you can't see nothing because this map don't have any layer. To see the first layer, we will to add a new BaseLayer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'export default function Map() {\n\n    .\n    .\n    .\n    return (\n        <MaptalksProvider>\n            <div className={styles.mapContainer} >\n                <MapComponent\n                    idMap="myMap"\n                    mapOptions={mapOptions}\n                    className="mapClass" //Previously defined in a css file. \n                >\n                //highlight-start\n                    <BaseLayer\n                        id="1345"\n                        options={{\n                            urlTemplate: \'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\',\n                            subdomains: ["a", "b", "c", "d"]\n                        }}\n                    />\n                    //highlight-end\n                </MapComponent>\n            </div>\n        </MaptalksProvider>\n    );\n}\n')),(0,r.kt)("p",null,"This map may be enough if you need to create a static map, but if yo need to add interactions like map events, you will need to get a map instance:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new state variable to set the map instance.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set the map state management to MapComponent."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'export default function Map() {\n\n  //1. create a state variable that contains the map intance.\n  //highlight-start\n    const [map, getMap] = useState<maptalks.Map>()\n    //highlight-end\n\n    return (\n      .\n      .\n      .\n                <MapComponent\n                    idMap="myMap"\n                    mapOptions={mapOptions}\n                    className="mapClass"\n                    //highlight-start\n                    getMap={getMap}\n                    //highlight-end\n                >\n      .\n      .\n      .\n    );\n}\n')),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you need to get map instance in other parts of your application, we reccomended wrap your app with MaptalksProvider in a superior level. In this case, replace the previus step by:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"export default function Map() {\n\n  //1. Getting map instance by Maptalks Context.\n  //highlight-start\n    const { map } = useContect(MaptalksContext)\n    //highlight-end\n    .\n    .\n    .\n\n}\n"))))))}d.isMDXComponent=!0}}]);